name: Test evaluation

on: [workflow_dispatch]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.407"

      - name: dotnet build
        working-directory: src
        run: |
          dotnet build -r linux-x64 -c Release
          dotnet publish -r linux-x64 -c Release -o ./../app --no-build
        
      - name: Build sample Docker image with ConsoleMessage grader
        run: docker build -t sampleevaluator-cm sample-evaluator/Console-log/evaluator-container

      - name: Build sample Docker image with TRX grader
        run: docker build -t sampleevaluator-trx sample-evaluator/Netcore-Trx/evaluator-container
        
      - name: Test sample evaluator with ConsoleMessage grader
        working-directory: app
        shell: pwsh
        run: |
          dotnet ahk.dll eval docker consolemessage --image sampleevaluator-cm --validationcode Valid55Code -s "./../sample-evaluator/sample-input" -o "./evaluation-output-cm"
          if (-not (Test-Path "evaluation-output-cm/results.xlsx")) { exit -1 }
          if ((Get-ChildItem -Path evaluation-output-cm -Include *.txt -Recurse | where { $_.Length -gt 0}).Length -ne 4) { exit -1 }

      - name: Test sample evaluator with TRX grader
        shell: pwsh
        working-directory: app
        run: |
          dotnet ahk.dll eval docker trx --image sampleevaluator-trx --trxfile testresult.trx --artifact-path /result -s "./../sample-evaluator/sample-input" -o "./evaluation-output-trx"
          if (-not (Test-Path "evaluation-output-trx/results.xlsx")) { exit -1 }
          if ((Get-ChildItem -Path evaluation-output-trx -Include *.trx -Recurse | where { $_.Length -gt 0}).Length -ne 4) { exit -1 }
